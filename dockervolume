#!/bin/bash
#
# Create an image called "rsync" on your docker host that includes the rsync
# command, then you can rsync to and from any volume on that host like so:
#
#   rsync -a --rsh=./dockervolume user@dockerhost:/mnt/volumename/ local/folder
#
# This command will mount volumename at /mnt in a temporary container on
# dockerhost and copy everything to the local folder local/folder
#
# The remote path must start with "/mnt/" because that is where the docker
# volume is mounted inside the temporary container, and include at least
# one other path component to serve as the volume name.  Other than that,
# though, you should be able to do all the usual rsync things.
#
# Watch out for spaces in pathnames and such!  This script could break easily
# and has had virtually no testing done to it.

# check that the path starts with /mnt/ and contains a volume name
PATHARG=${!#}
PATHCHK=${PATHARG#/mnt/}
VOLUME=${PATHCHK%%/*}
if [ "$PATHARG" == "$PATHCHK" -o "$VOLUME" == "$PATHCHK" ] ; then
	echo "${0##*/} shell helper: remote path '$PATHARG' invalid; format is /mnt/VOLUMENAME/[...]" >&2
	exit 2
fi

# check for login (username)
if [ "$1" == "-l" ] ; then
	shift
	LOGINARG="-l $1"
	shift
fi

# capture hostname
HOST="$1"

# remaining args are rsync invocation
shift

ssh $LOGINARG $HOST docker run -i --rm --volume=$VOLUME:/mnt/$VOLUME rsync $@
